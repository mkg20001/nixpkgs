From fde2d6e064cb5dd38846e954952693cdaf1247c7 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Maciej=20Kr=C3=BCger?= <mkg20001@gmail.com>
Date: Tue, 18 May 2021 04:48:42 +0200
Subject: [PATCH 1/3] feat: use effectiveUrl in tarball flake locked

---
 src/libfetchers/fetchers.hh |  7 +++++++
 src/libfetchers/tarball.cc  | 29 ++++++++++++++++++++++++++---
 2 files changed, 33 insertions(+), 3 deletions(-)

diff --git a/src/libfetchers/fetchers.hh b/src/libfetchers/fetchers.hh
index 498ad7e4d..7b15a6edf 100644
--- a/src/libfetchers/fetchers.hh
+++ b/src/libfetchers/fetchers.hh
@@ -174,4 +174,11 @@ std::pair<Tree, time_t> downloadTarball(
     bool locked,
     const Headers & headers = {});
 
+std::tuple<Tree, time_t, std::string> downloadTarballExtended(
+        ref<Store> store,
+        const std::string & url,
+        const std::string & name,
+        bool immutable,
+        const Headers & headers = {});
+
 }
diff --git a/src/libfetchers/tarball.cc b/src/libfetchers/tarball.cc
index 96fe5faca..e112e8ae7 100644
--- a/src/libfetchers/tarball.cc
+++ b/src/libfetchers/tarball.cc
@@ -115,6 +115,21 @@ DownloadFileResult downloadFile(
 }
 
 std::pair<Tree, time_t> downloadTarball(
+        ref<Store> store,
+        const std::string & url,
+        const std::string & name,
+        bool immutable,
+        const Headers & headers)
+{
+    auto [tree, lastModified, effectiveUrl] = downloadTarballExtended(store, url, name, immutable, headers);
+
+    return {
+        tree,
+        lastModified
+    };
+}
+
+std::tuple<Tree, time_t, std::string> downloadTarballExtended(
     ref<Store> store,
     const std::string & url,
     const std::string & name,
@@ -132,7 +147,8 @@ std::pair<Tree, time_t> downloadTarball(
     if (cached && !cached->expired)
         return {
             Tree { .actualPath = store->toRealPath(cached->storePath), .storePath = std::move(cached->storePath) },
-            getIntAttr(cached->infoAttrs, "lastModified")
+            getIntAttr(cached->infoAttrs, "lastModified"),
+            getStrAttr(cached->infoAttrs, "url")
         };
 
     auto res = downloadFile(store, url, name, locked, headers);
@@ -158,6 +174,7 @@ std::pair<Tree, time_t> downloadTarball(
     Attrs infoAttrs({
         {"lastModified", uint64_t(lastModified)},
         {"etag", res.etag},
+        {"url", res.effectiveUrl}
     });
 
     getCache()->add(
@@ -170,6 +187,7 @@ std::pair<Tree, time_t> downloadTarball(
     return {
         Tree { .actualPath = store->toRealPath(*unpackedStorePath), .storePath = std::move(*unpackedStorePath) },
         lastModified,
+        res.effectiveUrl
     };
 }
 
@@ -275,9 +293,14 @@ struct TarballInputScheme : CurlInputScheme
                     : hasTarballExtension(url.path));
     }
 
-    std::pair<StorePath, Input> fetch(ref<Store> store, const Input & input) override
+    std::pair<StorePath, Input> fetch(ref<Store> store, const Input & _input) override
     {
-        auto tree = downloadTarball(store, getStrAttr(input.attrs, "url"), input.getName(), false).first;
+        Input input(_input);
+
+        auto [tree, lastModified, effectiveUrl] = downloadTarballExtended(store, getStrAttr(input.attrs, "url"), input.getName(), false);
+
+        input.attrs.insert_or_assign("url", effectiveUrl);
+
         return {std::move(tree.storePath), input};
     }
 };
-- 
2.40.1

