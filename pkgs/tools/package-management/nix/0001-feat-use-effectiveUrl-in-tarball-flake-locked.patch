From 689f7151c0e515e0c753144622297f73ae186e4b Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Maciej=20Kr=C3=BCger?= <mkg20001@gmail.com>
Date: Tue, 18 May 2021 04:48:42 +0200
Subject: [PATCH 1/3] feat: use effectiveUrl in tarball flake locked

---
 src/libfetchers/fetchers.hh |  7 +++++++
 src/libfetchers/tarball.cc  | 29 ++++++++++++++++++++++++++---
 2 files changed, 33 insertions(+), 3 deletions(-)

diff --git a/src/libfetchers/fetchers.hh b/src/libfetchers/fetchers.hh
index c43b047a7..5f0233b21 100644
--- a/src/libfetchers/fetchers.hh
+++ b/src/libfetchers/fetchers.hh
@@ -157,4 +157,11 @@ std::pair<Tree, time_t> downloadTarball(
     bool immutable,
     const Headers & headers = {});
 
+std::tuple<Tree, time_t, std::string> downloadTarballExtended(
+        ref<Store> store,
+        const std::string & url,
+        const std::string & name,
+        bool immutable,
+        const Headers & headers = {});
+
 }
diff --git a/src/libfetchers/tarball.cc b/src/libfetchers/tarball.cc
index 031ccc5f7..258a7eaf5 100644
--- a/src/libfetchers/tarball.cc
+++ b/src/libfetchers/tarball.cc
@@ -110,6 +110,21 @@ DownloadFileResult downloadFile(
 }
 
 std::pair<Tree, time_t> downloadTarball(
+        ref<Store> store,
+        const std::string & url,
+        const std::string & name,
+        bool immutable,
+        const Headers & headers)
+{
+    auto [tree, lastModified, effectiveUrl] = downloadTarballExtended(store, url, name, immutable, headers);
+
+    return {
+        tree,
+        lastModified
+    };
+}
+
+std::tuple<Tree, time_t, std::string> downloadTarballExtended(
     ref<Store> store,
     const std::string & url,
     const std::string & name,
@@ -127,7 +142,8 @@ std::pair<Tree, time_t> downloadTarball(
     if (cached && !cached->expired)
         return {
             Tree(store->toRealPath(cached->storePath), std::move(cached->storePath)),
-            getIntAttr(cached->infoAttrs, "lastModified")
+            getIntAttr(cached->infoAttrs, "lastModified"),
+            getStrAttr(cached->infoAttrs, "url")
         };
 
     auto res = downloadFile(store, url, name, immutable, headers);
@@ -153,6 +169,7 @@ std::pair<Tree, time_t> downloadTarball(
     Attrs infoAttrs({
         {"lastModified", uint64_t(lastModified)},
         {"etag", res.etag},
+        {"url", res.effectiveUrl}
     });
 
     getCache()->add(
@@ -165,6 +182,7 @@ std::pair<Tree, time_t> downloadTarball(
     return {
         Tree(store->toRealPath(*unpackedStorePath), std::move(*unpackedStorePath)),
         lastModified,
+        res.effectiveUrl
     };
 }
 
@@ -224,9 +242,14 @@ struct TarballInputScheme : InputScheme
         return true;
     }
 
-    std::pair<Tree, Input> fetch(ref<Store> store, const Input & input) override
+    std::pair<Tree, Input> fetch(ref<Store> store, const Input & _input) override
     {
-        auto tree = downloadTarball(store, getStrAttr(input.attrs, "url"), input.getName(), false).first;
+        Input input(_input);
+
+        auto [tree, lastModified, effectiveUrl] = downloadTarballExtended(store, getStrAttr(input.attrs, "url"), input.getName(), false);
+
+        input.attrs.insert_or_assign("url", effectiveUrl);
+
         return {std::move(tree), input};
     }
 };
-- 
2.33.1

